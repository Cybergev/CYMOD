political_actions = {

	improved_worker_conditions = {

		icon = generic_industry

		available = {
			has_stability < 1.0
			if = {
				limit = {
					tag = SPR
				}
				NOT = {
					has_idea = SPR_political_violence
				}
			}
		}

		visible = {
			always = yes
		}

		fire_only_once = no

		modifier = {
			political_power_cost = 0.10
			stability_weekly = 0.01
			consumer_goods_factor = 0.10
			local_resources_factor = -0.10
			production_speed_buildings_factor = -0.10
			industrial_capacity_factory = -0.10
			industrial_capacity_dockyard = -0.10
			fuel_gain_factor = -0.10
		}

		days_remove = -1

		remove_trigger = {
			OR = {
				NOT = {
					has_stability < 1.0
				}
				has_decision = complete_improving_worker_conditions
			}
		}
		
		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_stability < 0.6
				NOT = {
					has_political_power < 100
				}
			}
		}
	}

	complete_improving_worker_conditions = {
		
		icon = generic_industry

		visible = {
			has_decision = improved_worker_conditions
		}

		fire_only_once = no
		
		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				NOT = {
					has_stability < 0.6
				}
				NOT = {
					has_political_power < 80
				}
			}
		}
	}

	promises_of_peace = {

		icon = generic_political_discourse

		available = {
			has_war = no
			has_war_support > 0.2
			has_stability < 1.0
			if = {
				limit = {
					tag = SPR
				}
				NOT = {
					has_idea = SPR_political_violence
				}
			}
		}

		visible = {
			always = yes
		}

		remove_trigger = {
			has_war = yes
			has_war_support < 0.05
		}

		fire_only_once = no

		modifier = {
			stability_weekly = 0.01
			war_support_weekly = -0.01
		}

		days_remove = 180

		cost = 50

		complete_effect = {

		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_stability < 0.4
			}
			modifier = {
				factor = 0
				original_tag = SPR
				NOT = { has_global_flag = spanish_civil_war }
			}
		}
	}

	change_capital_state_show = {

		icon = GFX_decision_generic_form_nation
		
		priority = -1

		visible = {
			NOT = {
				has_decision = change_capital_state_show
			}
		}

		remove_trigger = {
			has_decision = change_capital_state_hide
		}
		
		days_remove = -1
		fire_only_once = no
	}

	change_capital_state_hide = {

		icon = GFX_decision_generic_form_nation
		
		priority = -1

		visible = {
			has_decision = change_capital_state_show
		}

		fire_only_once = no
	}
	
	change_capital_state_on_map = {
		
		icon = GFX_decision_generic_form_nation

		priority = -2

		state_target = yes
		on_map_mode = map_only
		# target_array = core_states
		fire_only_once = no

		days_remove = 30
		fire_only_once = no
				
		target_trigger = {
			FROM = {
				impassable = no
				is_owned_by = ROOT
				is_core_of = ROOT
			}
		}
		
		visible = {
			FROM = { 
				is_controlled_by = ROOT 
				is_owned_by = ROOT
				is_capital = no
			}
			ROOT = { 
				NOT = { 
					has_country_flag = changing_capital
				} 
			}
			has_decision = change_capital_state_show
		}

		modifier = {
			political_power_cost = 1
		}

		complete_effect = {
			set_country_flag = changing_capital
		}

		remove_effect = {
			ROOT = { 
				set_capital = {
					state = FROM
					remember_old_capital = no
			  	}
				clr_country_flag = changing_capital
			}
		}
		
		available = {
			FROM = { is_fully_controlled_by = ROOT }		
		}
		
		ai_will_do = {
			factor = 0
		}
	}

}

Flexible_conscription_policy_category = {

	DEBUG_FCP_DROP = {

		icon = generic_decision

		visible = {
			has_idea = Flexible_conscription
			is_debug = yes
		}

		complete_effect = {
			clear_variable = Flexible_conscription_policy_conscription
			clear_variable = Flexible_conscription_policy_conscription_factor
			clear_variable = Flexible_conscription_policy_consumer_goods_factor
			clear_variable = Flexible_conscription_policy_production_speed_buildings_factor
			clear_variable = Flexible_conscription_policy_industrial_capacity_factory
			clear_variable = Flexible_conscription_policy_industrial_capacity_dockyard
			clear_variable = Flexible_conscription_policy_army_org_factor
			clear_variable = Flexible_conscription_policy_army_org_regain
			clear_variable = Flexible_conscription_policy_org_loss_at_low_org_factor
			clear_variable = Flexible_conscription_policy_org_loss_when_moving
			clear_variable = Flexible_conscription_policy_training_time_factor
			clear_variable = Flexible_conscription_policy_minimum_training_level
		}

	}

	increase_conscription = {

		icon = generic_decision

		available = {
			set_temp_variable = {
				ws_point = Flexible_conscription_policy_conscription
			}
			add_to_temp_variable = {
				ws_point = 0.01
			}
			multiply_temp_variable = {
				ws_point = 3
			}
			has_war_support = ws_point

			set_temp_variable = {
				temp_cost = ws_point
			}
			multiply_temp_variable = {
				ws_point = 10
			}
		}

		visible = {
			has_idea = Flexible_conscription
			check_variable = {
				Flexible_conscription_policy_conscription < 0.30
			}
		}

		cost = temp_cost

		complete_effect = {
			set_variable = {
				changing_conscription_value = 0.01
			}
			change_conscription = yes
		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 100
				set_temp_variable = {
					t = modifier@consumer_goods_factor
				}
				subtract_from_temp_variable = {
					t = Flexible_economy_policy_consumer_goods_factor
				}
				if = {
					limit = {
						has_war = no
					}
					NOT = {
						check_variable = {
							t > 0.05
						}
					}
				}
				else = {
					NOT = {
						check_variable = {
							t > 0.10
						}
					}
				}
			}
		}
		
	}

	decrease_conscription = {

		icon = generic_decision

		visible = {
			has_idea = Flexible_conscription
			check_variable = {
				Flexible_conscription_policy_conscription > 0
			}
		}

		complete_effect = {
			set_variable = {
				changing_conscription_value = -0.01
			}
			change_conscription = yes
		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 100
				set_temp_variable = {
					t = modifier@consumer_goods_factor
				}
				subtract_from_temp_variable = {
					t = Flexible_economy_policy_consumer_goods_factor
				}
				if = {
					limit = {
						has_war = no
					}
					check_variable = {
						t > 0
					}
				}
				else = {
					check_variable = {
						t > 0.10
					}
				}
			}
		}
		
	}

	increase_standarts = {
		icon = generic_army_support
		
		visible = {
			has_idea = Flexible_conscription
			check_variable = {
				Flexible_conscription_policy_army_org_factor < 0.10
			}
		}

		cost = 50
		days_remove = 30

		remove_effect = {
			set_temp_variable = {
				t_army_org = Flexible_conscription_policy_army_org_factor
			}
			set_temp_variable = {
				t_army_org_x_2 = t_army_org
			}
			multiply_temp_variable = {
				t_army_org_x_2 = 2
			}
			set_temp_variable = {
				t_army_org_x_4 = t_army_org_x_2
			}
			multiply_temp_variable = {
				t_army_org_x_4 = 2
			}
			set_temp_variable = {
				t_army_org_drag = t_army_org
			}
			multiply_temp_variable = {
				t_army_org_drag = -1
			}
			set_temp_variable = {
				t_army_org_x_2_drag = t_army_org_drag
			}
			multiply_temp_variable = {
				t_army_org_x_2_drag = -2
			}
			set_temp_variable = {
				t_army_org_x_4_drag = t_army_org_x_2_drag
			}
			multiply_temp_variable = {
				t_army_org_x_4_drag = -2
			}

			set_temp_variable = {
				t_army_org_manipulator = 0.01
			}
			set_temp_variable = {
				t_army_org_manipulator_x_2 = t_army_org_manipulator
			}
			multiply_temp_variable = {
				t_army_org_manipulator_x_2 = 2
			}
			set_temp_variable = {
				t_army_org_manipulator_x_4 = t_army_org_manipulator_x_2
			}
			multiply_temp_variable = {
				t_army_org_manipulator_x_4 = 2
			}
			set_temp_variable = {
				t_army_org_manipulator_drag = t_army_org_manipulator
			}
			multiply_temp_variable = {
				t_army_org_manipulator_drag = -1
			}
			set_temp_variable = {
				t_army_org_manipulator_x_2_drag = t_army_org_manipulator_drag
			}
			multiply_temp_variable = {
				t_army_org_manipulator_x_2_drag = -2
			}
			set_temp_variable = {
				t_army_org_manipulator_x_4_drag = t_army_org_manipulator_x_2_drag
			}
			multiply_temp_variable = {
				t_army_org_manipulator_x_4_drag = -2
			}
			
			clear_variable = Flexible_conscription_policy_conscription_factor
			clear_variable = Flexible_conscription_policy_army_org_factor
			clear_variable = Flexible_conscription_policy_army_org_regain
			clear_variable = Flexible_conscription_policy_org_loss_at_low_org_factor
			clear_variable = Flexible_conscription_policy_org_loss_when_moving
			clear_variable = Flexible_conscription_policy_training_time_factor
			clear_variable = Flexible_conscription_policy_minimum_training_level

			set_variable = {
				Flexible_conscription_policy_conscription_factor = t_army_org_x_4_drag
			}
			add_to_variable = {
				Flexible_conscription_policy_conscription_factor = t_army_org_manipulator_x_4_drag
				tooltip = conscription_factor_tt
			}
			set_variable = {
				Flexible_conscription_policy_army_org_factor = t_army_org
			}
			add_to_variable = {
				Flexible_conscription_policy_army_org_factor = t_army_org_manipulator
				tooltip = army_org_factor_tt
			}
			set_variable = {
				Flexible_conscription_policy_army_org_regain = t_army_org
			}
			add_to_variable = {
				Flexible_conscription_policy_army_org_regain = t_army_org_manipulator
				tooltip = army_org_regain_tt
			}
			set_variable = {
				Flexible_conscription_policy_org_loss_at_low_org_factor = t_army_org_drag
			}
			add_to_variable = {
				Flexible_conscription_policy_org_loss_at_low_org_factor = t_army_org_manipulator_drag
				tooltip = org_loss_at_low_org_factor_tt
			}
			set_variable = {
				Flexible_conscription_policy_org_loss_when_moving = t_army_org_drag
			}
			add_to_variable = {
				Flexible_conscription_policy_org_loss_when_moving = t_army_org_manipulator_drag
				tooltip = org_loss_when_moving_tt
			}
			set_variable = {
				Flexible_conscription_policy_training_time_factor = t_army_org_x_4
			}
			add_to_variable = {
				Flexible_conscription_policy_training_time_factor = t_army_org_manipulator_x_4
				tooltip = training_time_factor_tt
			}
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 10
				NOT = {
					manpower_per_military_factory < 10000
				}
			}
		}
	}

	decrease_standarts = {
		icon = generic_army_support
		
		visible = {
			has_idea = Flexible_conscription
			check_variable = {
				Flexible_conscription_policy_army_org_factor > 0
			}
		}

		cost = 50
		days_remove = 30

		remove_effect = {
			set_temp_variable = {
				t_army_org = Flexible_conscription_policy_army_org_factor
			}
			set_temp_variable = {
				t_army_org_x_2 = t_army_org
			}
			multiply_temp_variable = {
				t_army_org_x_2 = 2
			}
			set_temp_variable = {
				t_army_org_x_4 = t_army_org_x_2
			}
			multiply_temp_variable = {
				t_army_org_x_4 = 2
			}
			set_temp_variable = {
				t_army_org_drag = t_army_org
			}
			multiply_temp_variable = {
				t_army_org_drag = -1
			}
			set_temp_variable = {
				t_army_org_x_2_drag = t_army_org_drag
			}
			multiply_temp_variable = {
				t_army_org_x_2_drag = -2
			}
			set_temp_variable = {
				t_army_org_x_4_drag = t_army_org_x_2_drag
			}
			multiply_temp_variable = {
				t_army_org_x_4_drag = -2
			}

			set_temp_variable = {
				t_army_org_manipulator = -0.01
			}
			set_temp_variable = {
				t_army_org_manipulator_x_2 = t_army_org_manipulator
			}
			multiply_temp_variable = {
				t_army_org_manipulator_x_2 = 2
			}
			set_temp_variable = {
				t_army_org_manipulator_x_4 = t_army_org_manipulator_x_2
			}
			multiply_temp_variable = {
				t_army_org_manipulator_x_4 = 2
			}
			set_temp_variable = {
				t_army_org_manipulator_drag = t_army_org_manipulator
			}
			multiply_temp_variable = {
				t_army_org_manipulator_drag = -1
			}
			set_temp_variable = {
				t_army_org_manipulator_x_2_drag = t_army_org_manipulator_drag
			}
			multiply_temp_variable = {
				t_army_org_manipulator_x_2_drag = -2
			}
			set_temp_variable = {
				t_army_org_manipulator_x_4_drag = t_army_org_manipulator_x_2_drag
			}
			multiply_temp_variable = {
				t_army_org_manipulator_x_4_drag = -2
			}
			
			clear_variable = Flexible_conscription_policy_conscription_factor
			clear_variable = Flexible_conscription_policy_army_org_factor
			clear_variable = Flexible_conscription_policy_army_org_regain
			clear_variable = Flexible_conscription_policy_org_loss_at_low_org_factor
			clear_variable = Flexible_conscription_policy_org_loss_when_moving
			clear_variable = Flexible_conscription_policy_training_time_factor
			clear_variable = Flexible_conscription_policy_minimum_training_level

			set_variable = {
				Flexible_conscription_policy_conscription_factor = t_army_org_x_4_drag
			}
			add_to_variable = {
				Flexible_conscription_policy_conscription_factor = t_army_org_manipulator_x_4_drag
				tooltip = conscription_factor_tt
			}
			set_variable = {
				Flexible_conscription_policy_army_org_factor = t_army_org
			}
			add_to_variable = {
				Flexible_conscription_policy_army_org_factor = t_army_org_manipulator
				tooltip = army_org_factor_tt
			}
			set_variable = {
				Flexible_conscription_policy_army_org_regain = t_army_org
			}
			add_to_variable = {
				Flexible_conscription_policy_army_org_regain = t_army_org_manipulator
				tooltip = army_org_regain_tt
			}
			set_variable = {
				Flexible_conscription_policy_org_loss_at_low_org_factor = t_army_org_drag
			}
			add_to_variable = {
				Flexible_conscription_policy_org_loss_at_low_org_factor = t_army_org_manipulator_drag
				tooltip = org_loss_at_low_org_factor_tt
			}
			set_variable = {
				Flexible_conscription_policy_org_loss_when_moving = t_army_org_drag
			}
			add_to_variable = {
				Flexible_conscription_policy_org_loss_when_moving = t_army_org_manipulator_drag
				tooltip = org_loss_when_moving_tt
			}
			set_variable = {
				Flexible_conscription_policy_training_time_factor = t_army_org_x_4
			}
			add_to_variable = {
				Flexible_conscription_policy_training_time_factor = t_army_org_manipulator_x_4
				tooltip = training_time_factor_tt
			}
		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 10
				manpower_per_military_factory < 10000
			}
		}
	}
}

flexible_trade_policy_category = {
	
	increase_export_1 = {

		icon = generic_decision

		ai_will_do = {
			base = 0
			modifier = {
				set_temp_variable = {
					v_ai_in_point = 0
				}
				set_temp_variable = {
					v_ai_in_aluminium_p = resource_produced@aluminium
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_in_aluminium_p > 50
						}
					}
					add_to_temp_variable = {
						v_ai_in_point = resource@aluminium
					}
				}
				set_temp_variable = {
					v_ai_in_chromium_p = resource_produced@chromium
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_in_chromium_p > 0
						}
					}
					add_to_temp_variable = {
						v_ai_in_point = resource@chromium
					}
				}
				set_temp_variable = {
					v_ai_in_rubber_p = resource_produced@rubber
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_in_rubber_p > 80
						}
					}
					add_to_temp_variable = {
						v_ai_in_point = resource@rubber
					}
				}
				set_temp_variable = {
					v_ai_in_steel_p = resource_produced@steel
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_in_steel_p > 50
						}
					}
					add_to_temp_variable = {
						v_ai_in_point = resource@steel
					}
				}
				set_temp_variable = {
					v_ai_in_tungsten_p = resource_produced@tungsten
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_in_tungsten_p > 80
						}
					}
					add_to_temp_variable = {
						v_ai_in_point = resource@tungsten
					}
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_in_aluminium_p = 0
						}
						check_variable = {
							v_ai_in_chromium_p = 0
						}
						check_variable = {
							v_ai_in_rubber_p = 0
						}
						check_variable = {
							v_ai_in_steel_p = 0
						}
						check_variable = {
							v_ai_in_tungsten_p = 0
						}
					}
					add_to_temp_variable = {
						v_ai_in_point = 100
					}
				}
				check_variable = {
					v_ai_in_point > 50
				}
				add = v_ai_in_point
			}
		}

		visible = {
			has_idea = Flexible_trade
			NOT = {
				check_variable = {
					Flexible_trade_policy_min_export > 0.99
				}
			}
		}

		cost = 1

		complete_effect = {
			add_to_variable = { 
				Flexible_trade_policy_min_export = 0.01
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			} 
		}

	}

	increase_export_2 = {
		
		icon = generic_decision
		
		visible = {
			has_idea = Flexible_trade
			NOT = {
				check_variable = {
					Flexible_trade_policy_min_export > 0.98
				}
			}
		}

		cost = 2

		complete_effect = {
			add_to_variable = { 
				Flexible_trade_policy_min_export = 0.02
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			} 
		}

	}

	increase_export_5 = {
		
		icon = generic_decision

		visible = {
			has_idea = Flexible_trade
			NOT = {
				check_variable = {
					Flexible_trade_policy_min_export > 0.95
				}
			}
		}

		cost = 5

		complete_effect = {
			add_to_variable = { 
				Flexible_trade_policy_min_export = 0.05
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			} 
		}

	}

	increase_export_10 = {
		
		icon = generic_decision

		visible = {
			has_idea = Flexible_trade
			NOT = {
				check_variable = {
					Flexible_trade_policy_min_export > 0.90
				}
			}
		}

		cost = 10

		complete_effect = {
			add_to_variable = { 
				Flexible_trade_policy_min_export = 0.10
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			} 
		}
	}

	decrease_export_1 = {

		icon = generic_decision

		ai_will_do = {
			base = 0
			modifier = {
				set_temp_variable = {
					v_ai_de_point = 0
				}
				set_temp_variable = {
					v_ai_de_aluminium_p = resource_produced@aluminium
				}
				set_temp_variable = {
					v_ai_de_aluminium_c = resource_consumed@aluminium
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_de_aluminium_p < v_ai_de_aluminium_c
						}
					}
					add_to_temp_variable = {
						v_ai_de_point = resource@aluminium
					}
				}
				set_temp_variable = {
					v_ai_de_chromium_p = resource_produced@chromium
				}
				set_temp_variable = {
					v_ai_de_chromium_c = resource_consumed@chromium
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_de_chromium_p < v_ai_de_chromium_c
						}
					}
					add_to_temp_variable = {
						v_ai_de_point = resource@chromium
					}
				}
				set_temp_variable = {
					v_ai_de_rubber_p = resource_produced@rubber
				}
				set_temp_variable = {
					v_ai_de_rubber_c = resource_consumed@rubber
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_de_rubber_p < v_ai_de_rubber_c
						}
					}
					add_to_temp_variable = {
						v_ai_de_point = resource@rubber
					}
				}
				set_temp_variable = {
					v_ai_de_steel_p = resource_produced@steel
				}
				set_temp_variable = {
					v_ai_de_steel_c = resource_consumed@steel
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_de_steel_p < v_ai_de_steel_c
						}
					}
					add_to_temp_variable = {
						v_ai_de_point = resource@steel
					}
				}
				set_temp_variable = {
					v_ai_de_tungsten_p = resource_produced@tungsten
				}
				set_temp_variable = {
					v_ai_de_tungsten_c = resource_consumed@tungsten
				}
				IF = {
					limit = {
						check_variable = {
							v_ai_de_tungsten_p < v_ai_de_tungsten_c
						}
					}
					add_to_temp_variable = {
						v_ai_de_point = resource@tungsten
					}
				}
				OR = {
					IF = {
						limit = {
							OR = {
								check_variable = {
									v_ai_de_point < 0
								}
							}
						}
						multiply_temp_variable = {
							v_ai_de_point = -1
						}
					}
				}
				add = v_ai_de_point
			}
		}

		visible = {
			has_idea = Flexible_trade
			NOT = {
				check_variable = {
					Flexible_trade_policy_min_export < 0.01
				}
			}
		}

		cost = 1

		complete_effect = {
			add_to_variable = { 
				Flexible_trade_policy_min_export = -0.01
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			} 
		}

	}

	decrease_export_2 = {
		
		icon = generic_decision
		
		visible = {
			has_idea = Flexible_trade
			NOT = {
				check_variable = {
					Flexible_trade_policy_min_export < 0.02
				}
			}
		}

		cost = 2

		complete_effect = {
			add_to_variable = { 
				Flexible_trade_policy_min_export = -0.02
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			} 
		}

	}

	decrease_export_5 = {
		
		icon = generic_decision

		visible = {
			has_idea = Flexible_trade
			NOT = {
				check_variable = {
					Flexible_trade_policy_min_export < 0.05
				}
			}
		}

		cost = 5

		complete_effect = {
			add_to_variable = { 
				Flexible_trade_policy_min_export = -0.05
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			} 
		}

	}
	
	decrease_export_10 = {
		
		icon = generic_decision

		visible = {
			has_idea = Flexible_trade
			NOT = {
				check_variable = {
					Flexible_trade_policy_min_export < 0.10
				}
			}
		}

		cost = 10

		complete_effect = {
			add_to_variable = { 
				Flexible_trade_policy_min_export = -0.10
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			} 
		}

	}

}

flexible_economy_policy_category = {

	increase_civilian_economy_1 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_civilian_share > 0.99
				}
			}
		}

		cost = 2

		ai_will_do = {
			base = 0

			modifier = {
				has_war = yes
				factor = -10
			}

	 	}

		complete_effect = {
			set_variable = {
				increasing_civilian_economy_value = 0.01
			}
			increase_civilian_economy = yes
		}
	}
	increase_civilian_economy_2 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_civilian_share > 0.98
				}
			}
		}

		cost = 4

		complete_effect = {
			set_variable = {
				increasing_civilian_economy_value = 0.02
			}
			increase_civilian_economy = yes
		}
	}
	increase_civilian_economy_5 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_civilian_share > 0.95
				}
			}
		}
		
		cost = 10

		complete_effect = {
			set_variable = {
				increasing_civilian_economy_value = 0.05
			}
			increase_civilian_economy = yes
		}
	}
	increase_civilian_economy_10 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_civilian_share > 0.90
				}
			}
		}

		cost = 20

		complete_effect = {
			set_variable = {
				increasing_civilian_economy_value = 0.10
			}
			increase_civilian_economy = yes
		}
	}
	
	increase_military_economy_1 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_military_share > 0.99
				}
			}
		}

		available = {
			set_temp_variable = {
				ws = Flexible_economy_policy_military_share
			}
			add_to_temp_variable = {
				ws = 0.01
			}
			NOT = {
				has_war_support < ws
			}
		}

		cost = 1

		ai_will_do = {
			base = 0

			modifier = {
				set_temp_variable = {
					t = 1
				}
				subtract_from_temp_variable = {
					t = threat
				}
				multiply_temp_variable = {
					t = 100
				}
				add = t
			}

			modifier = {
				add = 100
				has_war = yes
			}
			
	 	}

		complete_effect = {
			set_variable = {
				increasing_military_economy_value = 0.01
			}
			increase_military_economy = yes
		}
	}
	increase_military_economy_2 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_military_share > 0.98
				}
			}
		}

		available = {
			set_temp_variable = {
				ws = Flexible_economy_policy_military_share
			}
			add_to_temp_variable = {
				ws = 0.02
			}
			NOT = {
				has_war_support < ws
			}
		}

		cost = 4

		complete_effect = {
			set_variable = {
				increasing_military_economy_value = 0.02
			}
			increase_military_economy = yes
		}
	}
	increase_military_economy_5 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_military_share > 0.95
				}
			}
		}

		available = {
			set_temp_variable = {
				ws = Flexible_economy_policy_military_share
			}
			add_to_temp_variable = {
				ws = 0.05
			}
			NOT = {
				has_war_support < ws
			}
		}

		cost = 10

		complete_effect = {
			set_variable = {
				increasing_military_economy_value = 0.05
			}
			increase_military_economy = yes
		}
	}
	increase_military_economy_10 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_military_share > 0.90
				}
			}
		}

		available = {
			set_temp_variable = {
				ws = Flexible_economy_policy_military_share
			}
			add_to_temp_variable = {
				ws = 0.10
			}
			NOT = {
				has_war_support < ws
			}
		}

		cost = 20

		complete_effect = {
			set_variable = {
				increasing_military_economy_value = 0.10
			}
			increase_military_economy = yes
		}
	}

	increase_economy_policy_1 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_consumer_goods_factor > 0.49
				}
			}
		}

		cost = 10

		ai_will_do = {
			base = 0
			modifier = {
				set_temp_variable = {
					t = num_of_available_civilian_factories
				}
				set_temp_variable = {
					tt = Flexible_economy_policy_consumer_goods_factor
				}
				add_to_temp_variable = {
					tt = 0.10
				}
				divide_temp_variable = {
					t = tt
				}
				add = t
			}
		}

		complete_effect = {
			set_variable = {
				changing_consumer_economy_value = 0.01
			}
			change_economy_policy_volume = yes
		}
	}
	increase_economy_policy_2 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_consumer_goods_factor > 0.48
				}
			}
		}

		cost = 20

		complete_effect = {
			set_variable = {
				changing_consumer_economy_value = 0.02
			}
			change_economy_policy_volume = yes
		}
	}
	increase_economy_policy_5 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_consumer_goods_factor > 0.45
				}
			}
		}
		
		cost = 50

		complete_effect = {
			set_variable = {
				changing_consumer_economy_value = 0.05
			}
			change_economy_policy_volume = yes
		}
	}
	increase_economy_policy_10 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_consumer_goods_factor > 0.40
				}
			}
		}

		cost = 100

		complete_effect = {
			set_variable = {
				changing_consumer_economy_value = 0.10
			}
			change_economy_policy_volume = yes
		}
	}
	
	decrease_economy_policy_1 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_consumer_goods_factor < 0.01
				}
			}
		}

		cost = 10

		ai_will_do = {
			base = 0
			modifier = {
				set_temp_variable = {
					t = num_of_available_civilian_factories
				}
				set_temp_variable = {
					tt = Flexible_economy_policy_consumer_goods_factor
				}
				add_to_temp_variable = {
					tt = 0.10
				}
				multiply_temp_variable = {
					t = tt
				}
				add = t
			}
		}

		complete_effect = {
			set_variable = {
				changing_consumer_economy_value = -0.01
			}
			change_economy_policy_volume = yes
		}
	}
	decrease_economy_policy_2 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_consumer_goods_factor < 0.02
				}
			}
		}

		cost = 20

		complete_effect = {
			set_variable = {
				changing_consumer_economy_value = -0.02
			}
			change_economy_policy_volume = yes
		}
	}
	decrease_economy_policy_5 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_consumer_goods_factor < 0.05
				}
			}
		}
		
		cost = 50

		complete_effect = {
			set_variable = {
				changing_consumer_economy_value = -0.05
			}
			change_economy_policy_volume = yes
		}
	}
	decrease_economy_policy_10 = {

		icon = generic_decision
		
		visible = {
			has_idea = Flexible_economy
			NOT = {
				check_variable = {
					Flexible_economy_policy_consumer_goods_factor < 0.10
				}
			}
		}

		cost = 100

		complete_effect = {
			set_variable = {
				changing_consumer_economy_value = -0.10
			}
			change_economy_policy_volume = yes
		}
	}
	
}

economy_decisions = {

	Flexiblizing_laws = {

		icon = generic_decision

		is_good = no
		
		selectable_mission = yes

		activation = {
			OR = {
				if = {
					limit = {
						has_dynamic_modifier = {
							modifier = Flexible_conscription_policy
						}
					}
					NOT = {
						has_idea = Flexible_conscription
					}
				}
				if = {
					limit = {
						has_dynamic_modifier = {
							modifier = Flexible_trade_policy
						}
					}
					NOT = {
						has_idea = Flexible_trade
					}
				}
				if = {
					limit = {
						has_dynamic_modifier = {
							modifier = Flexible_economy_policy
						}
					}
					NOT = {
						has_idea = Flexible_economy
					}
				}
			}
		}

		cancel_trigger = {
			always = yes
		}

		days_mission_timeout = 0

		timeout_effect = {
			flexiblize_laws = yes
		}

		cancel_effect = {
			flexiblize_laws = yes
		}

		complete_effect = {
			flexiblize_laws = yes
		}

		ai_will_do = {
			factor = 100
		}
	}

	Begin_flexible_conscription_policy = {

		icon = generic_decision

		available = {
			OR = {
				has_idea = extensive_conscription
				has_idea = service_by_requirement
				has_idea = all_adults_serve
				has_idea = scraping_the_barrel
			}
		}

		visible = {
			NOT = {
				has_idea = Flexible_conscription
				has_dynamic_modifier = {
					modifier = Flexible_conscription_policy
				}
			}
		}

		cancel_trigger = {
			OR = {
				AND = {
					NOT = {
						has_idea = extensive_conscription
					}
					NOT = {
						has_idea = service_by_requirement
					}
					NOT = {
						has_idea = all_adults_serve
					}
					NOT = {
						has_idea = scraping_the_barrel
					}
				}
				has_idea = Flexible_conscription
				has_dynamic_modifier = {
					modifier = Flexible_conscription_policy
				}
			}
		}

		days_remove = 60

		modifier = {
			political_power_cost = 1
		}

		remove_effect = {
			if = {
				limit = {
					has_idea = extensive_conscription
				}
				set_variable = {
					changing_conscription_value = 0.05
				}
			}
			if = {
				limit = {
					has_idea = service_by_requirement
				}
				set_variable = {
					changing_conscription_value = 0.10
				}
			}
			if = {
				limit = {
					has_idea = all_adults_serve
				}
				set_variable = {
					changing_conscription_value = 0.20
				}
			}
			if = {
				limit = {
					has_idea = scraping_the_barrel
				}
				set_variable = {
					changing_conscription_value = 0.25
				}
			}
			add_dynamic_modifier = {
				modifier = Flexible_conscription_policy
			}
			change_conscription = yes
			add_ideas = Flexible_conscription
		}

		ai_will_do = {
			base = 100
		}
		
	}

	Begin_flexible_trade_policy = {

		icon = generic_decision

		available = {
			OR = {
				has_idea = free_trade
				has_idea = export_focus
			}
		}

		visible = {
			NOT = {
				has_idea = Flexible_trade
				has_dynamic_modifier = {
					modifier = Flexible_trade_policy
				}
			}
		}

		cancel_trigger = {
			OR = {
				AND = {
					NOT = {
						has_idea = free_trade
					}
					NOT = {
						has_idea = export_focus
					}
				}
				has_idea = Flexible_trade
				has_dynamic_modifier = {
					modifier = Flexible_trade_policy
				}
			}
		}

		days_remove = 60

		modifier = {
			political_power_cost = 1
		}

		remove_effect = {
			if = {
				limit = {
					has_idea = free_trade
				}
				remove_ideas = free_trade
				set_temp_variable = {
					v_trade = 0.8
				}
			}
			if = {
				limit = {
					has_idea = export_focus
				}
				remove_ideas = export_focus
				set_temp_variable = {
					v_trade = 0.5
				}
			}
			add_to_variable = { 
				Flexible_trade_policy_min_export = v_trade
			} 
			set_temp_variable = {
				v_trade = Flexible_trade_policy_min_export
			}
			set_temp_variable = {
				v_trade_consumer = v_trade
			}
			divide_temp_variable = {
				v_trade_consumer = 10
			}
			multiply_temp_variable = {
				v_trade_consumer = -1
			}
			set_temp_variable = {
				v_trade_bonus = v_trade
			}
			divide_temp_variable = {
				v_trade_bonus = 5
			}
			set_temp_variable = {
				v_trade_intel = v_trade
			}
			multiply_temp_variable = {
				v_trade_intel = 40
			}
			set_variable = { 
				Flexible_trade_policy_consumer_goods_factor = v_trade_consumer
			}
			set_variable = { 
				Flexible_trade_policy_bonus = v_trade_bonus
			}
			set_variable = { 
				Flexible_trade_policy_intel = v_trade_intel
			}
			add_dynamic_modifier = {
				modifier = Flexible_trade_policy
			}
			add_ideas = Flexible_trade
		}

		ai_will_do = {
			base = 100
		}
		
	}

	Begin_flexible_economy_policy = {

		icon = generic_decision

		available = {
			OR = {
				has_idea = partial_economic_mobilisation
				has_idea = war_economy
			}
		}

		visible = {
			NOT = {
				has_idea = Flexible_economy
				has_dynamic_modifier = {
					modifier = Flexible_economy_policy
				}
			}
		}

		cancel_trigger = {
			OR = {
				AND = {
					NOT = {
						has_idea = partial_economic_mobilisation
					}
					NOT = {
						has_idea = war_economy
					}
				}
				has_idea = Flexible_economy
				has_dynamic_modifier = {
					modifier = Flexible_economy_policy
				}
			}
		}

		days_remove = 60

		modifier = {
			political_power_cost = 1
		}

		remove_effect = {
			IF = {
				limit = {
					has_idea = partial_economic_mobilisation
				}
				remove_ideas = partial_economic_mobilisation
				set_temp_variable = {
					v_consumer_bonus = 0.2
				}
				add_to_temp_variable = {
					v_economy_civilian_point = 0.4
				}
				add_to_temp_variable = {
					v_economy_military_point = 0.6
				}
			}
			IF = {
				limit = {
					has_idea = war_economy
				}
				remove_ideas = war_economy
				set_temp_variable = {
					v_consumer_bonus = 0.2
				}
				add_to_temp_variable = {
					v_economy_civilian_point = 0.0
				}
				add_to_temp_variable = {
					v_economy_military_point = 1
				}
			}
			set_variable = {
				changing_consumer_economy_value = v_consumer_bonus
			}
			set_variable = {
				Flexible_economy_policy_civilian_share = v_economy_civilian_point
			}
			set_variable = {
				Flexible_economy_policy_military_share = v_economy_military_point
			}
			change_economy_policy_volume = yes
			add_dynamic_modifier = {
				modifier = Flexible_economy_policy
			}
			add_ideas = Flexible_economy
		}
		
		ai_will_do = {
			base = 100
		}
		
	}

	begin_infrastructure_building_addition = {

		priority = 11

		icon = generic_construction
		
		priority = -1

		ai_will_do = {
			factor = 200
		}

		visible = {
			NOT = {
				has_decision = begin_infrastructure_building_addition
			}
		}

		remove_trigger = {
			has_decision = complete_infrastructure_building_addition
		}
		
		days_remove = -1
		fire_only_once = no
	}

	complete_infrastructure_building_addition = {

		priority = 11

		icon = generic_construction
		
		priority = -1

		visible = {
			has_decision = begin_infrastructure_building_addition
		}

		fire_only_once = no
	}
	
	cancel_infrastructure_building_addition = {

		priority = 11

		icon = generic_construction
		
		priority = -1

		visible = {
			has_decision = infrastructure_building_slot
		}

		fire_only_once = no
	}
	
	cancel_war_building_addition = {

		priority = 11

		icon = generic_construction
		
		priority = -1

		visible = {
			has_decision = war_building_slot
		}

		fire_only_once = no
	}
	
	infrastructure_building_slot = {

		priority = 11

		icon = generic_construction

        allowed = {
            always = yes
        }

		state_target = yes
		on_map_mode = map_only

        cost = 0
		days_remove = 60
        fire_only_once = no

		available = {
			NOT = {
				political_power_daily < 1
			}
			FROM = {
				OWNER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
				CONTROLLER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
		}
	
		visible = {
			has_decision = begin_infrastructure_building_addition
			FROM = {
				OWNER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
				CONTROLLER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
				AND = {
					free_building_slots = {
						building = industrial_complex
						size < 30
						include_locked = no
					}
					free_building_slots = {
						building = industrial_complex
						size > 0
						include_locked = yes
					}
					NOT = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = no
						}
					}
				}
			}
		}

		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
				CONTROLLER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
		}

		cancel_trigger = {
			OR = {
				has_decision = cancel_infrastructure_building_addition
				FROM = {
					OWNER = {
						NOT = {
							original_tag = ROOT
							is_subject_of = ROOT
						}
					}
					CONTROLLER = {
						NOT = {
							original_tag = ROOT
							is_subject_of = ROOT
						}
					}
				}
			}
		}
		remove_effect = {
			FROM = {
				add_extra_state_shared_building_slots = 1
				OWNER = {
					IF = {
						limit = {
							is_subject_of = ROOT
						}
						add_autonomy_score = {
							value = -60
						}
					}
				}
			}
		}

		modifier = {
			political_power_cost = 1
		}

		ai_will_do = {
			factor = 0
			modifier = {
				factor = 10
				all_core_state = {
					NOT = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = no
						}
					}
				}
			}
			modifier = {
				factor = 1
				FROM = {
					is_core_of = ROOT
					is_capital = yes
				}
			}
			modifier = {
				factor = 0
				FROM = {
					NOT = {
						is_core_of = ROOT
					}
				}
			}
			modifier = {
				factor = 1
				political_power_daily > 2
			}
			modifier = {
				factor = 1
				political_power_daily > 3
			}
		}
    }

    war_building_slot = {

		priority = 11

    	icon = generic_construction

        allowed = {
            has_war = yes
        }

		state_target = yes
		on_map_mode = map_only

        cost = 0
		days_remove = 30
        fire_only_once = no

		available = {
			NOT = {
				political_power_daily < 1
			}
			FROM = {
				OWNER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
				CONTROLLER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
		}
	
		visible = {
            has_war = yes
			has_decision = begin_infrastructure_building_addition
			FROM = {
				OWNER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
				CONTROLLER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
				AND = {
					free_building_slots = {
						building = industrial_complex
						size < 30
						include_locked = no
					}
					free_building_slots = {
						building = industrial_complex
						size > 0
						include_locked = yes
					}
					NOT = {
						free_building_slots = {
							building = industrial_complex
							size > 0
							include_locked = no
						}
					}
				}
			}
		}

		target_trigger = {
			FROM = {
				OWNER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
				CONTROLLER = {
					OR = {
						original_tag = ROOT
						is_subject_of = ROOT
					}
				}
			}
		}

		cancel_trigger = {
			OR = {
				has_decision = cancel_infrastructure_building_addition
				FROM = {
					OWNER = {
						NOT = {
							original_tag = ROOT
							is_subject_of = ROOT
						}
					}
					CONTROLLER = {
						NOT = {
							original_tag = ROOT
							is_subject_of = ROOT
						}
					}
				}
			}
		}
		
		remove_effect = {
			FROM = {
				add_extra_state_shared_building_slots = 1
				OWNER = {
					add_war_support = -0.1
					add_stability = -0.1
					IF = {
						limit = {
							is_subject_of = ROOT
						}
						add_autonomy_score = {
							value = -60
						}
					}
				}
			}
		}

		modifier = {
			political_power_cost = 1
		}

		ai_will_do = {
			factor = 0
		}
    }
	
}

propaganda_efforts = {

	war_propaganda = {

		icon = generic_prepare_civil_war

		available = {
			NOT = { has_country_flag = war_propaganda_campaign_running }
			threat > 0.5
			has_war_support < 0.5
			has_offensive_war = no
			if = {
				limit = {
					tag = SPR
					has_dlc = "La Resistance"
				}
				NOT = {
					has_idea = SPR_political_violence
				}
			}
			if = {
				limit = {
					original_tag = SPR
					has_dlc = "La Resistance"
				}
				has_global_flag = scw_over
			}
		}

		visible = {
			
		}

		fire_only_once = no

		days_remove = 90
		days_re_enable = 180

		cost = 150

		modifier = {
			war_support_weekly = 0.01
		}

		complete_effect = {
			set_country_flag = war_propaganda_campaign_running
		}
		remove_effect = {
			clr_country_flag = war_propaganda_campaign_running
		}

		ai_will_do = {
			base = 0
			modifier = {
				add = 1
				has_war_support < 0.4
				has_war = yes
			}
		}
	}

	war_propaganda_against_warmonger = {

		icon = generic_prepare_civil_war

		available = {
			FROM = {
				OR = {
					is_justifying_wargoal_against = ROOT
					has_wargoal_against = ROOT
					has_war_with = ROOT
					has_offensive_war = yes
				}
				AND = {
					is_neighbor_of = ROOT
					NOT = { 
						is_in_faction_with = ROOT 
					}
					NOT = { 
						has_war_together_with = ROOT
					}
					NOT = { 
						has_opinion = {
							target = ROOT
							value > 40
						}
					}
				}
			}
			if = {
				limit = {
					tag = SPR
					has_dlc = "La Resistance"
				}
				NOT = {
					has_idea = SPR_political_violence
				}
			}
			if = {
				limit = {
					original_tag = SPR
					has_dlc = "La Resistance"
				}
				has_global_flag = scw_over
			}
			
			set_temp_variable = { war_propaganda_cost = 50 }
			if = {
				limit = {
					FROM = {
						OR = {
							is_justifying_wargoal_against = ROOT
							has_wargoal_against = ROOT
							has_war_with = ROOT
						}
					}
					set_temp_variable = { war_propaganda_cost = 0 }
				}
			}
		}

		target_trigger = {
			FROM = {
				OR = {
					OR = {
						is_justifying_wargoal_against = ROOT
						has_wargoal_against = ROOT
						has_war_with = ROOT
					}
					AND = {
						is_neighbor_of = ROOT
						has_offensive_war = yes
						NOT = { 
							is_in_faction_with = ROOT 
							has_war_together_with = ROOT
						}
					}
				}
			}
		}

		visible = {
			NOT = { has_country_flag = war_propaganda_campaign_running }
		}

		days_remove = 90

		fire_only_once = yes

		cost = war_propaganda_cost

		targeted_modifier = {
			tag = FROM
			attack_bonus_against = 0.05
			defense_bonus_against = 0.05
			breakthrough_bonus_against = 0.05
		}

		modifier = {
			war_support_weekly = 0.01
		}

		complete_effect = {
			set_country_flag = { flag = war_propaganda_campaign_running value = 1 days = 90 } #TODO_Manu: This is a nasty fix so that the flag gets eventually removed if the target is annexed. days = days_remove
		}
		remove_effect = {
			clr_country_flag = war_propaganda_campaign_running
		}

		ai_will_do = {
			factor = 1
		}
	}
}

war_measures = {
	
	desperate_defense = {

		icon = generic_prepare_civil_war

		available = {
			NOT = {
				surrender_progress < 0.3
			}
			IF = {
				limit = {
					has_government = democratic
				}
				NOT = {
					democratic < 0.5
				}
			}
			IF = {
				limit = {
					has_government = communism
				}
				NOT = {
					communism < 0.5
				}
			}
			IF = {
				limit = {
					has_government = fascism
				}
				NOT = {
					fascism < 0.5
				}
			}
			IF = {
				limit = {
					has_government = neutrality
				}
				NOT = {
					neutrality < 0.5
				}
			}
		}

		cancel_trigger = {
			OR = {
				surrender_progress < 0.2
				has_capitulated = yes
			}
		}

		visible = {
			has_capitulated = NO
			NOT = {
				original_tag = SOV
			}
		}

		fire_only_once = no

        days_remove = -1
		ai_will_do = {
			factor = 1000
		}

		modifier = {
			political_power_factor = -1
			army_morale_factor = 0.50
			dig_in_speed_factor = 0.50
			stability_weekly = -0.01
			war_support_weekly = -0.01
			org_loss_at_low_org_factor = -0.50
			army_core_attack_factor = 0.50
			army_core_defence_factor = 0.50
			max_dig_in_factor = 0.50
			command_abilities_cost_factor = -0.5
			command_power_gain_mult = 0.50
			mobilization_laws_cost_factor = -0.50
		}

	}
	
	SOV_desperate_defense = {

		name = desperate_defense

		icon = generic_prepare_civil_war

		available = {
			NOT = {
				surrender_progress < 0.20
			}
			IF = {
				limit = {
					has_government = democratic
				}
				NOT = {
					democratic < 0.5
				}
			}
			IF = {
				limit = {
					has_government = communism
				}
				NOT = {
					communism < 0.5
				}
			}
			IF = {
				limit = {
					has_government = fascism
				}
				NOT = {
					fascism < 0.5
				}
			}
			IF = {
				limit = {
					has_government = neutrality
				}
				NOT = {
					neutrality < 0.5
				}
			}
		}

		cancel_trigger = {
			OR = {
				surrender_progress < 0.10
				has_capitulated = yes
			}
		}

		visible = {
			has_capitulated = NO
			original_tag = SOV
			has_completed_focus = SOV_desperate_measures
			NOT = {
				has_idea = SOV_desperate_measures_ns
			}
		}

		fire_only_once = no

        days_remove = -1
		ai_will_do = {
			factor = 1000
		}

		cancel_effect = {
			remove_ideas = SOV_desperate_measures_ns
		}

		complete_effect = {
			add_ideas = SOV_desperate_measures_ns
		}

	}

	women_in_the_workforce = {

		icon = generic_industry

        allowed = {
            always = yes
        }

        available = {
            has_war = yes
			has_war_support > 0.5
        }
        visible = {
            has_war = yes
        }
        cost = 100
        days_remove = -1
        remove_trigger = {
        	OR = {
            	has_war = no
            }
        }
        modifier = {
            conscription = 0.05
			consumer_goods_factor = 0.05
        }
        ai_will_do = {
			factor = 1

			modifier = {
				factor = 3
				has_war_support > 0.60
			}
		}
		complete_effect = {
			if = {
				limit = {
					tag = CAN
				}
				country_event = { id = canada_vanilla.1 hours = 6 } # Ronnie the Bren Gun Girl
			}
        }
    }

}

foreign_influence = {
	
	instantiate_collaboration = {
		icon = generic_prepare_civil_war

		cost = 0

		available = {
			NOT = {
				core_compliance = {
					occupied_country_tag = FROM
					value < 100
				}
			}
		}
		
        visible = {
			has_rule = can_create_collaboration_government
        }

		target_trigger = {
			FROM = {
				any_core_state = {
					has_resistance = yes
				}
			}
		}
		
		target_non_existing = yes
		target_array = occupied_countries

		complete_effect = {
			set_temp_variable = { country_to_initiate = FROM }
			instantiate_collaboration_government = yes
		}

		ai_will_do = {
			base = 0
			
			modifier = {
				add = 100
				tag = ITA
				FROM = {
					tag = ETH
				}
			}
		}
	}

}
